generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model users {
  id                 String               @id @default(uuid())
  name               String               @db.VarChar(255)
  email              String               @unique(map: "email") @db.VarChar(255)
  address            String?              @db.VarChar(255)
  password           String?              @db.VarChar(255)
  image              String?              @default("https://storage.googleapis.com/bangkit-bucket-gambar/user/default.png") @db.VarChar(255)
  role               Role                 @default(user)
  token              String?              @db.VarChar(255)
  createdAt          DateTime             @default(now()) @db.Timestamp(0)
  updatedAt          DateTime             @default(now()) @db.Timestamp(0)
  handicraft         handicraft[]
  likes              likes[]
  history_handicraft history_handicraft[]
  recognition        recognition[]
}

enum Role {
  user
  admin
}

model handicraft {
  id                 String               @id @default(uuid())
  name               String               @db.VarChar(255)
  description        String               @db.Text
  image              String               @default("") @db.VarChar(255)
  id_user            String               @db.VarChar(255)
  createdAt          DateTime             @default(now()) @db.Timestamp(0)
  updatedAt          DateTime             @default(now()) @db.Timestamp(0)
  users              users                @relation(fields: [id_user], references: [id])
  detail_handicraft  detail_handicraft[]
  tag_handicraft     tag_handicraft[]
  likes              likes[]
  history_handicraft history_handicraft[]
  recognition        recognition[]
  waste_handicraft   waste_handicraft[]
}

model detail_handicraft {
  id            String     @id @default(uuid())
  id_handicraft String     @db.VarChar(255)
  name          String     @db.VarChar(255)
  description   String     @db.Text
  image         String     @default("") @db.VarChar(255)
  step_number   Int
  createdAt     DateTime   @default(now()) @db.Timestamp(0)
  updatedAt     DateTime   @default(now()) @db.Timestamp(0)
  handicraft    handicraft @relation(fields: [id_handicraft], references: [id])
}

model tag {
  id             String           @id @default(uuid())
  name           String           @unique @db.VarChar(255)
  createdAt      DateTime         @default(now()) @db.Timestamp(0)
  updatedAt      DateTime         @default(now()) @db.Timestamp(0)
  tag_handicraft tag_handicraft[]
}

model tag_handicraft {
  id            String     @id @default(uuid())
  id_handicraft String     @db.VarChar(255)
  id_tag        String     @db.VarChar(255)
  createdAt     DateTime   @default(now()) @db.Timestamp(0)
  updatedAt     DateTime   @default(now()) @db.Timestamp(0)
  handicraft    handicraft @relation(fields: [id_handicraft], references: [id])
  tag           tag        @relation(fields: [id_tag], references: [id])
}

model likes {
  id            String     @id @default(uuid())
  id_user       String     @db.VarChar(255)
  id_handicraft String     @db.VarChar(255)
  createdAt     DateTime   @default(now()) @db.Timestamp(0)
  updatedAt     DateTime   @default(now()) @db.Timestamp(0)
  users         users      @relation(fields: [id_user], references: [id])
  handicraft    handicraft @relation(fields: [id_handicraft], references: [id])
}

model history_handicraft {
  id            String     @id @default(uuid())
  id_user       String     @db.VarChar(255)
  id_handicraft String     @db.VarChar(255)
  done          Boolean    @default(false)
  step_number   Int
  createdAt     DateTime   @default(now()) @db.Timestamp(0)
  updatedAt     DateTime   @default(now()) @db.Timestamp(0)
  users         users      @relation(fields: [id_user], references: [id])
  handicraft    handicraft @relation(fields: [id_handicraft], references: [id])
}

model recognition {
  id                 String               @id @default(uuid())
  id_user            String               @db.VarChar(255)
  id_handicraft      String               @db.VarChar(255)
  createdAt          DateTime             @default(now()) @db.Timestamp(0)
  updatedAt          DateTime             @default(now()) @db.Timestamp(0)
  users              users                @relation(fields: [id_user], references: [id])
  handicraft         handicraft           @relation(fields: [id_handicraft], references: [id])
  detail_recognition detail_recognition[]
}

model detail_recognition {
  id             String      @id @default(uuid())
  id_recognition String      @db.VarChar(255)
  id_waste       String      @db.VarChar(255)
  createdAt      DateTime    @default(now()) @db.Timestamp(0)
  updatedAt      DateTime    @default(now()) @db.Timestamp(0)
  recognition    recognition @relation(fields: [id_recognition], references: [id])
}

model waste {
  id               String             @id @default(uuid())
  name             String             @unique @db.VarChar(255)
  label            String             @db.VarChar(255)
  image            String             @default("") @db.VarChar(255)
  createdAt        DateTime           @default(now()) @db.Timestamp(0)
  updatedAt        DateTime           @default(now()) @db.Timestamp(0)
  waste_handicraft waste_handicraft[]
}

model waste_handicraft {
  id            String     @id @default(uuid())
  id_handicraft String     @db.VarChar(255)
  id_waste      String     @db.VarChar(255)
  createdAt     DateTime   @default(now()) @db.Timestamp(0)
  updatedAt     DateTime   @default(now()) @db.Timestamp(0)
  handicraft    handicraft @relation(fields: [id_handicraft], references: [id])
  waste         waste      @relation(fields: [id_waste], references: [id])
}